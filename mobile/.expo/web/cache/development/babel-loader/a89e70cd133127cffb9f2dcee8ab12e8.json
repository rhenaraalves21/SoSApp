{"ast":null,"code":"import _defineProperty2 from \"@babel/runtime/helpers/defineProperty\";\nimport _toConsumableArray from \"@babel/runtime/helpers/toConsumableArray\";\nfunction _createForOfIteratorHelperLoose(o, allowArrayLike) { var it = typeof Symbol !== \"undefined\" && o[typeof Symbol === \"function\" ? Symbol.iterator : \"@@iterator\"] || o[\"@@iterator\"]; if (it) return (it = it.call(o)).next.bind(it); if (Array.isArray(o) || (it = _unsupportedIterableToArray(o)) || allowArrayLike && o && typeof o.length === \"number\") { if (it) o = it; var i = 0; return function () { if (i >= o.length) return { done: true }; return { done: false, value: o[i++] }; }; } throw new TypeError(\"Invalid attempt to iterate non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); }\nfunction _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === \"string\") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === \"Object\" && o.constructor) n = o.constructor.name; if (n === \"Map\" || n === \"Set\") return Array.from(o); if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }\nfunction _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }\nfunction ownKeys(object, enumerableOnly) {\n  var keys = Object.keys(object);\n  if (Object.getOwnPropertySymbols) {\n    var symbols = Object.getOwnPropertySymbols(object);\n    if (enumerableOnly) symbols = symbols.filter(function (sym) {\n      return Object.getOwnPropertyDescriptor(object, sym).enumerable;\n    });\n    keys.push.apply(keys, symbols);\n  }\n  return keys;\n}\nfunction _objectSpread(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i] != null ? arguments[i] : {};\n    if (i % 2) {\n      ownKeys(Object(source), true).forEach(function (key) {\n        _defineProperty(target, key, source[key]);\n      });\n    } else if (Object.getOwnPropertyDescriptors) {\n      Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));\n    } else {\n      ownKeys(Object(source)).forEach(function (key) {\n        Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));\n      });\n    }\n  }\n  return target;\n}\nfunction _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n  return obj;\n}\nimport * as React from 'react';\nimport NavigationBuilderContext from \"./NavigationBuilderContext\";\nimport NavigationRouteContext from \"./NavigationRouteContext\";\nvar VISITED_ROUTE_KEYS = Symbol('VISITED_ROUTE_KEYS');\nexport var shouldPreventRemove = function shouldPreventRemove(emitter, beforeRemoveListeners, routes, action) {\n  var _action$VISITED_ROUTE;\n  var reversedRoutes = _toConsumableArray(routes).reverse();\n  var visitedRouteKeys = (_action$VISITED_ROUTE = action[VISITED_ROUTE_KEYS]) !== null && _action$VISITED_ROUTE !== void 0 ? _action$VISITED_ROUTE : new Set();\n  var beforeRemoveAction = _objectSpread(_objectSpread({}, action), {}, _defineProperty2({}, VISITED_ROUTE_KEYS, visitedRouteKeys));\n  for (var _iterator = _createForOfIteratorHelperLoose(reversedRoutes), _step; !(_step = _iterator()).done;) {\n    var route = _step.value;\n    var _beforeRemoveListener;\n    if (visitedRouteKeys.has(route.key)) {\n      continue;\n    }\n    var isPrevented = (_beforeRemoveListener = beforeRemoveListeners[route.key]) === null || _beforeRemoveListener === void 0 ? void 0 : _beforeRemoveListener.call(beforeRemoveListeners, beforeRemoveAction);\n    if (isPrevented) {\n      return true;\n    }\n    visitedRouteKeys.add(route.key);\n    var event = emitter.emit({\n      type: 'beforeRemove',\n      target: route.key,\n      data: {\n        action: beforeRemoveAction\n      },\n      canPreventDefault: true\n    });\n    if (event.defaultPrevented) {\n      return true;\n    }\n  }\n  return false;\n};\nexport default function useOnPreventRemove(_ref) {\n  var getState = _ref.getState,\n    emitter = _ref.emitter,\n    beforeRemoveListeners = _ref.beforeRemoveListeners;\n  var _React$useContext = React.useContext(NavigationBuilderContext),\n    addKeyedListener = _React$useContext.addKeyedListener;\n  var route = React.useContext(NavigationRouteContext);\n  var routeKey = route === null || route === void 0 ? void 0 : route.key;\n  React.useEffect(function () {\n    if (routeKey) {\n      return addKeyedListener === null || addKeyedListener === void 0 ? void 0 : addKeyedListener('beforeRemove', routeKey, function (action) {\n        var state = getState();\n        return shouldPreventRemove(emitter, beforeRemoveListeners, state.routes, action);\n      });\n    }\n  }, [addKeyedListener, beforeRemoveListeners, emitter, getState, routeKey]);\n}","map":{"version":3,"sources":["useOnPreventRemove.tsx"],"names":["React","NavigationBuilderContext","NavigationRouteContext","VISITED_ROUTE_KEYS","Symbol","shouldPreventRemove","emitter","beforeRemoveListeners","routes","action","reversedRoutes","reverse","visitedRouteKeys","Set","beforeRemoveAction","route","has","key","isPrevented","add","event","emit","type","target","data","canPreventDefault","defaultPrevented","useOnPreventRemove","getState","addKeyedListener","useContext","routeKey","useEffect","state"],"mappings":"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","sourcesContent":["import * as React from 'react';\nimport type {\n  NavigationState,\n  Route,\n  NavigationAction,\n} from '@react-navigation/routers';\nimport NavigationBuilderContext, {\n  ChildBeforeRemoveListener,\n} from './NavigationBuilderContext';\nimport NavigationRouteContext from './NavigationRouteContext';\nimport type { NavigationEventEmitter } from './useEventEmitter';\nimport type { EventMapCore } from './types';\n\ntype Options = {\n  getState: () => NavigationState;\n  emitter: NavigationEventEmitter<EventMapCore<any>>;\n  beforeRemoveListeners: Record<string, ChildBeforeRemoveListener | undefined>;\n};\n\nconst VISITED_ROUTE_KEYS = Symbol('VISITED_ROUTE_KEYS');\n\nexport const shouldPreventRemove = (\n  emitter: NavigationEventEmitter<EventMapCore<any>>,\n  beforeRemoveListeners: Record<string, ChildBeforeRemoveListener | undefined>,\n  routes: Route<string>[],\n  action: NavigationAction\n) => {\n  // Call these in reverse order so last screens handle the event first\n  const reversedRoutes = [...routes].reverse();\n\n  const visitedRouteKeys: Set<string> =\n    // @ts-expect-error: add this property to mark that we've already emitted this action\n    action[VISITED_ROUTE_KEYS] ?? new Set<string>();\n\n  const beforeRemoveAction = {\n    ...action,\n    [VISITED_ROUTE_KEYS]: visitedRouteKeys,\n  };\n\n  for (const route of reversedRoutes) {\n    if (visitedRouteKeys.has(route.key)) {\n      // Skip if we've already emitted this action for this screen\n      continue;\n    }\n\n    // First, we need to check if any child screens want to prevent it\n    const isPrevented = beforeRemoveListeners[route.key]?.(beforeRemoveAction);\n\n    if (isPrevented) {\n      return true;\n    }\n\n    visitedRouteKeys.add(route.key);\n\n    const event = emitter.emit({\n      type: 'beforeRemove',\n      target: route.key,\n      data: { action: beforeRemoveAction },\n      canPreventDefault: true,\n    });\n\n    if (event.defaultPrevented) {\n      return true;\n    }\n  }\n\n  return false;\n};\n\nexport default function useOnPreventRemove({\n  getState,\n  emitter,\n  beforeRemoveListeners,\n}: Options) {\n  const { addKeyedListener } = React.useContext(NavigationBuilderContext);\n  const route = React.useContext(NavigationRouteContext);\n  const routeKey = route?.key;\n\n  React.useEffect(() => {\n    if (routeKey) {\n      return addKeyedListener?.('beforeRemove', routeKey, (action) => {\n        const state = getState();\n\n        return shouldPreventRemove(\n          emitter,\n          beforeRemoveListeners,\n          state.routes,\n          action\n        );\n      });\n    }\n  }, [addKeyedListener, beforeRemoveListeners, emitter, getState, routeKey]);\n}\n"]},"metadata":{},"sourceType":"module"}