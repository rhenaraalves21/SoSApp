{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\nfunction _extends() {\n  _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n    return target;\n  };\n  return _extends.apply(this, arguments);\n}\nfunction _objectWithoutProperties(source, excluded) {\n  if (source == null) return {};\n  var target = _objectWithoutPropertiesLoose(source, excluded);\n  var key, i;\n  if (Object.getOwnPropertySymbols) {\n    var sourceSymbolKeys = Object.getOwnPropertySymbols(source);\n    for (i = 0; i < sourceSymbolKeys.length; i++) {\n      key = sourceSymbolKeys[i];\n      if (excluded.indexOf(key) >= 0) continue;\n      if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue;\n      target[key] = source[key];\n    }\n  }\n  return target;\n}\nfunction _objectWithoutPropertiesLoose(source, excluded) {\n  if (source == null) return {};\n  var target = {};\n  var sourceKeys = Object.keys(source);\n  var key, i;\n  for (i = 0; i < sourceKeys.length; i++) {\n    key = sourceKeys[i];\n    if (excluded.indexOf(key) >= 0) continue;\n    target[key] = source[key];\n  }\n  return target;\n}\nimport * as React from 'react';\nimport Animated from \"react-native-web/dist/exports/Animated\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Platform from \"react-native-web/dist/exports/Platform\";\nvar Screens;\ntry {\n  Screens = require('react-native-screens');\n} catch (e) {}\nvar WebScreen = function (_React$Component) {\n  _inherits(WebScreen, _React$Component);\n  var _super = _createSuper(WebScreen);\n  function WebScreen() {\n    _classCallCheck(this, WebScreen);\n    return _super.apply(this, arguments);\n  }\n  _createClass(WebScreen, [{\n    key: \"render\",\n    value: function render() {\n      var _this$props = this.props,\n        active = _this$props.active,\n        style = _this$props.style,\n        rest = _objectWithoutProperties(_this$props, [\"active\", \"style\"]);\n      return React.createElement(View, _extends({\n        hidden: !active,\n        style: [style, {\n          display: active ? 'flex' : 'none'\n        }]\n      }, rest));\n    }\n  }]);\n  return WebScreen;\n}(React.Component);\nvar AnimatedWebScreen = Animated.createAnimatedComponent(WebScreen);\nexport var MaybeScreenContainer = function MaybeScreenContainer(_ref) {\n  var enabled = _ref.enabled,\n    rest = _objectWithoutProperties(_ref, [\"enabled\"]);\n  if (enabled && Platform.OS !== 'web' && Screens && Screens.screensEnabled()) {\n    return React.createElement(Screens.ScreenContainer, rest);\n  }\n  return React.createElement(View, rest);\n};\nexport var MaybeScreen = function MaybeScreen(_ref2) {\n  var enabled = _ref2.enabled,\n    active = _ref2.active,\n    rest = _objectWithoutProperties(_ref2, [\"enabled\", \"active\"]);\n  if (enabled && Platform.OS === 'web') {\n    return React.createElement(AnimatedWebScreen, _extends({\n      active: active\n    }, rest));\n  }\n  if (enabled && Screens && Screens.screensEnabled()) {\n    return React.createElement(Screens.Screen, _extends({\n      active: active\n    }, rest));\n  }\n  return React.createElement(View, rest);\n};","map":{"version":3,"sources":["Screens.tsx"],"names":["React","Screens","require","e","WebScreen","Component","active","style","rest","props","display","AnimatedWebScreen","Animated","createAnimatedComponent","MaybeScreenContainer","enabled","Platform","OS","screensEnabled","MaybeScreen"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA,OAAO,KAAKA,KAAZ,MAAuB,OAAvB;AAAA;AAAA;AAAA;AAGA,IAAIC,OAAJ;AAEA,IAAI;EACFA,OAAO,GAAGC,OAAO,CAAC,sBAAD,CAAjBD;AACD,CAFD,CAEE,OAAOE,CAAP,EAAU,CAEX;AAFC,IAOIC,SAAN;EAAA;EAAA;EAAA;IAAA;IAAA;EAAA;EAAA;IAAA;IAAA,yBAMW;MACP,IAAA,WAAA,GAAmC,IAAA,CAAKK,KAAxC;QAAQH,MAAF,GAAN,WAAA,CAAQA,MAAF;QAAUC,KAAAA,GAAhB,WAAA,CAAgBA,KAAAA;QAAUC,IAA1B,GAAA,wBAAA,CAAA,WAAA,EAAA,CAAA,QAAA,EAAA,OAAA,CAAA,CAAA;MAEA,OACE,KAAA,CAAA,aAAA,CAAC,IAAD,EAAA,QAAA,CAAA;QAEE,MAAM,EAAE,CAACF,MAFX;QAGE,KAAK,EAAE,CAACC,KAAD,EAAQ;UAAEG,OAAO,EAAEJ,MAAM,GAAG,MAAH,GAAY;QAA7B,CAAR;MAHT,CAAA,EAIME,IAJN,CAAA,CADF;IAQD;EAAA;EAAA;AAAA,EAjBqBR,KAAK,CAACK,SAA9B;AAoBA,IAAMM,iBAAiB,GAAGC,QAAQ,CAACC,uBAATD,CAAiCR,SAAjCQ,CAA1B;AAEA,OAAO,IAAME,oBAAoB,GAAG,SAAvBA,oBAAoB,CAAG,IAAA,EAM9B;EAN+B,IACnCC,OAAAA,GAKI,IAAA,CALJA,OAAAA;IACGP,IAIC,GAAA,wBAAA,CAAA,IAAA,EAAA,CAAA,SAAA,CAAA,CAAA;EACJ,IAAIO,OAAO,IAAIC,QAAQ,CAACC,EAATD,KAAgB,KAA3BD,IAAoCd,OAApCc,IAA+Cd,OAAO,CAACiB,cAARjB,EAAnD,EAA6E;IAC3E,OAAO,KAAA,CAAA,aAAA,CAAC,OAAD,CAAS,eAAT,EAA6BO,IAA7B,CAAP;EACD;EAED,OAAO,KAAA,CAAA,aAAA,CAAC,IAAD,EAAUA,IAAV,CAAP;AACD,CAZM;AAcP,OAAO,IAAMW,WAAW,GAAG,SAAdA,WAAW,CAAG,KAAA,EAQrB;EAAA,IAPJJ,OAD0B,GAQtB,KAAA,CAPJA,OAD0B;IAE1BT,MAAAA,GAMI,KAAA,CANJA,MAAAA;IACGE,IAKC,GAAA,wBAAA,CAAA,KAAA,EAAA,CAAA,SAAA,EAAA,QAAA,CAAA,CAAA;EACJ,IAAIO,OAAO,IAAIC,QAAQ,CAACC,EAATD,KAAgB,KAA/B,EAAsC;IACpC,OAAO,KAAA,CAAA,aAAA,CAAC,iBAAD,EAAA,QAAA,CAAA;MAAmB,MAAM,EAAEV;IAA3B,CAAA,EAAuCE,IAAvC,CAAA,CAAP;EACD;EAED,IAAIO,OAAO,IAAId,OAAXc,IAAsBd,OAAO,CAACiB,cAARjB,EAA1B,EAAoD;IAElD,OAAO,KAAA,CAAA,aAAA,CAAC,OAAD,CAAS,MAAT,EAAA,QAAA,CAAA;MAAgB,MAAM,EAAEK;IAAxB,CAAA,EAAoCE,IAApC,CAAA,CAAP;EACD;EAED,OAAO,KAAA,CAAA,aAAA,CAAC,IAAD,EAAUA,IAAV,CAAP;AACD,CAnBM","sourcesContent":["import * as React from 'react';\nimport { Animated, View, Platform, ViewProps } from 'react-native';\n\nlet Screens: typeof import('react-native-screens') | undefined;\n\ntry {\n  Screens = require('react-native-screens');\n} catch (e) {\n  // Ignore\n}\n\n// The web implementation in react-native-screens seems buggy.\n// The view doesn't become visible after coming back in some cases.\n// So we use our custom implementation.\nclass WebScreen extends React.Component<\n  ViewProps & {\n    active: number;\n    children: React.ReactNode;\n  }\n> {\n  render() {\n    const { active, style, ...rest } = this.props;\n\n    return (\n      <View\n        // @ts-expect-error: hidden exists on web, but not in React Native\n        hidden={!active}\n        style={[style, { display: active ? 'flex' : 'none' }]}\n        {...rest}\n      />\n    );\n  }\n}\n\nconst AnimatedWebScreen = Animated.createAnimatedComponent(WebScreen);\n\nexport const MaybeScreenContainer = ({\n  enabled,\n  ...rest\n}: ViewProps & {\n  enabled: boolean;\n  children: React.ReactNode;\n}) => {\n  if (enabled && Platform.OS !== 'web' && Screens && Screens.screensEnabled()) {\n    return <Screens.ScreenContainer {...rest} />;\n  }\n\n  return <View {...rest} />;\n};\n\nexport const MaybeScreen = ({\n  enabled,\n  active,\n  ...rest\n}: ViewProps & {\n  enabled: boolean;\n  active: 0 | 1 | Animated.AnimatedInterpolation;\n  children: React.ReactNode;\n}) => {\n  if (enabled && Platform.OS === 'web') {\n    return <AnimatedWebScreen active={active} {...rest} />;\n  }\n\n  if (enabled && Screens && Screens.screensEnabled()) {\n    // @ts-expect-error: stackPresentation is incorrectly marked as required\n    return <Screens.Screen active={active} {...rest} />;\n  }\n\n  return <View {...rest} />;\n};\n"]},"metadata":{},"sourceType":"module"}