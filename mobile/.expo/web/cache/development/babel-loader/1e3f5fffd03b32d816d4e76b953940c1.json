{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/objectWithoutProperties\";\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\nimport { AppOwnership, UserInterfaceIdiom } from \"./Constants.types\";\nimport ExponentConstants from \"./ExponentConstants\";\nexport { AppOwnership, UserInterfaceIdiom };\nif (!ExponentConstants) {\n  console.warn(\"No native ExponentConstants module found, are you sure the expo-constants's module is linked properly?\");\n}\nvar manifest = null;\nif (ExponentConstants && ExponentConstants.manifest) {\n  manifest = ExponentConstants.manifest;\n  if (typeof manifest === 'string') {\n    manifest = JSON.parse(manifest);\n  }\n}\nvar _ref = ExponentConstants || {},\n  name = _ref.name,\n  appOwnership = _ref.appOwnership,\n  constants = _objectWithoutProperties(_ref, [\"name\", \"appOwnership\"]);\nexport default _objectSpread(_objectSpread({}, constants), {}, {\n  appOwnership: appOwnership != null ? appOwnership : null,\n  manifest: manifest,\n  deviceId: constants.installationId,\n  linkingUrl: constants.linkingUri\n});","map":{"version":3,"sources":["../src/Constants.ts"],"names":[],"mappings":";;;;AAAA,SAEE,YAAY,EAKZ,kBAAkB;AAGpB,OAAO,iBAAiB;AAExB,SAEE,YAAY,EAKZ,kBAAkB;AAIpB,IAAI,CAAC,iBAAiB,EAAE;EACtB,OAAO,CAAC,IAAI,CACV,wGAAwG,CACzG;AACF;AAGD,IAAI,QAAQ,GAAG,IAAI;AACnB,IAAI,iBAAiB,IAAI,iBAAiB,CAAC,QAAQ,EAAE;EACnD,QAAQ,GAAG,iBAAiB,CAAC,QAAQ;EACrC,IAAI,OAAO,QAAQ,KAAK,QAAQ,EAAE;IAChC,QAAQ,GAAG,IAAI,CAAC,KAAK,CAAC,QAAQ,CAAC;EAChC;;AACF,WAE6C,iBAAiB,IAAI,CAAA,CAAE;EAA7D,IAAI,QAAJ,IAAI;EAAE,YAAY,QAAZ,YAAY;EAAK,SAAS;AAExC,+CACK,SAAS;EAEZ,YAAY,EAAE,YAAY,WAAZ,YAAY,GAAI,IAAI;EAClC,QAAQ,EAAR,QAAQ;EAER,QAAQ,EAAE,SAAS,CAAC,cAAc;EAClC,UAAU,EAAE,SAAS,CAAC;AAAU","sourcesContent":["import {\n  AndroidManifest,\n  AppOwnership,\n  Constants,\n  IOSManifest,\n  NativeConstants,\n  PlatformManifest,\n  UserInterfaceIdiom,\n  WebManifest,\n} from './Constants.types';\nimport ExponentConstants from './ExponentConstants';\n\nexport {\n  AndroidManifest,\n  AppOwnership,\n  Constants,\n  IOSManifest,\n  NativeConstants,\n  PlatformManifest,\n  UserInterfaceIdiom,\n  WebManifest,\n};\n\nif (!ExponentConstants) {\n  console.warn(\n    \"No native ExponentConstants module found, are you sure the expo-constants's module is linked properly?\"\n  );\n}\n\n// On Android we pass the manifest in JSON form so this step is necessary\nlet manifest = null;\nif (ExponentConstants && ExponentConstants.manifest) {\n  manifest = ExponentConstants.manifest;\n  if (typeof manifest === 'string') {\n    manifest = JSON.parse(manifest);\n  }\n}\n\nconst { name, appOwnership, ...constants } = (ExponentConstants || {}) as any;\n\nexport default {\n  ...constants,\n  // Ensure this is null in bare workflow\n  appOwnership: appOwnership ?? null,\n  manifest,\n  // Legacy aliases\n  deviceId: constants.installationId,\n  linkingUrl: constants.linkingUri,\n} as Constants;\n"],"sourceRoot":""},"metadata":{},"sourceType":"module"}